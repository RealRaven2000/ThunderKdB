/*
 * This file was generated by the MozButton SDK,
 * which is part of the Toolbar Buttons project.
 * You should not edit this file, but rather download
 * the project source and rerun the builder.
 */

const Cc = Components.classes;
const Ci = Components.interfaces;
const Cu = Components.utils;

var EXPORTED_SYMBOLS = ["loadButtons", "unloadButtons", "setupButtons", "shutdownButtons"];

try {
	Cu.import("resource:///modules/CustomizableUI.jsm");
} catch(e) {
	Cu.import("chrome://toolbar-buttons/content/customizable.jsm");
}

Cu.import('resource://gre/modules/Services.jsm');
Cu.import("resource://services-common/stringbundle.js");

try { Cu.import('resource://modules/CustomizableUI.jsm'); } catch(e) {}

var gShutDownFunctions = [];

var toolbar_buttons = {
	interfaces: {},
	// the important global objects used by the extension
	toolbar_button_loader: function(parent, child) {
		var object_name;
		for(object_name in child){
			if(object_name == 'interfaces') {
				toolbar_buttons.toolbar_button_loader(parent.interfaces, child.interfaces);
			} else {
				parent[object_name] = child[object_name];
			}
		}
	},
	registerCleanUpFunction: function(func) {
		gShutDownFunctions.push(func);
	}

};
var loader = Cc["@mozilla.org/moz/jssubscript-loader;1"].getService(Ci.mozIJSSubScriptLoader);
var gScope = this;
// the number at the end forces a reload of the properties file, since sometimes it it catched when we don't want
var buttonStrings = new StringBundle("chrome://toolbar-buttons/locale/button_labels.properties?time=" + Date.now().toString());

function setupButtons() {
	loader.loadSubScript("chrome://toolbar-buttons/content/button.js", gScope);
	loader.loadSubScript("chrome://toolbar-buttons/content/browser.js", gScope);
		CustomizableUI.createWidget({
		id: 'help',
		label: buttonStrings.get('help.label'),
		tooltiptext: buttonStrings.get('help.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.openHelpLink('firefox-help');
		}
	});

	CustomizableUI.createWidget({
		id: 'about-disk-cache',
		label: buttonStrings.get('about-disk-cache.label'),
		tooltiptext: buttonStrings.get('about-disk-cache.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openPageInTab('about:cache?storage=disk', event);
		}
	});

	CustomizableUI.createWidget({
		id: 'workoffline',
		type: 'custom',
		label: buttonStrings.get('workoffline.label'),
		tooltiptext: buttonStrings.get('workoffline.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'workoffline';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('workoffline.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('workoffline.tooltip'));
			toolbarbutton_0.setAttribute("command", "goOfflineMenuitem");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'themes',
		label: buttonStrings.get('themes.label'),
		tooltiptext: buttonStrings.get('themes.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.OpenAddonsMgr(event, 'themes', 'addons://list/theme');
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-print-page',
		type: 'custom',
		label: buttonStrings.get('tb-print-page.label'),
		tooltiptext: buttonStrings.get('tb-print-page.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-print-page';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-print-page.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-print-page.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_print");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'find-prev',
		type: 'custom',
		label: buttonStrings.get('find-prev.label'),
		tooltiptext: buttonStrings.get('find-prev.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'find-prev';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('find-prev.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('find-prev.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_findPrevious");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_findPrevious");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'hide-images',
		label: buttonStrings.get('hide-images.label'),
		tooltiptext: buttonStrings.get('hide-images.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.hideImages(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'new-message',
		label: buttonStrings.get('new-message.label'),
		tooltiptext: buttonStrings.get('new-message.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.MailIntegration.sendMessage('', '');
		}
	});

	CustomizableUI.createWidget({
		id: 'find',
		type: 'custom',
		label: buttonStrings.get('find.label'),
		tooltiptext: buttonStrings.get('find.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'find';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('find.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('find.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_find");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_find");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'about-plugins',
		label: buttonStrings.get('about-plugins.label'),
		tooltiptext: buttonStrings.get('about-plugins.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openPageInTab('about:plugins', event);
		}
	});

	CustomizableUI.createWidget({
		id: 'toolbar-menu',
		type: 'custom',
		label: buttonStrings.get('toolbar-menu.label'),
		tooltiptext: buttonStrings.get('toolbar-menu.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'toolbar-menu';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('toolbar-menu.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('toolbar-menu.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.id = 'toolbar-popup';
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.onViewToolbarsPopupShowing(event);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'close-other-tabs',
		label: buttonStrings.get('close-other-tabs.label'),
		tooltiptext: buttonStrings.get('close-other-tabs.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.closeOtherTabs(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'installaddons',
		label: buttonStrings.get('installaddons.label'),
		tooltiptext: buttonStrings.get('installaddons.tooltip'),
		onClick: function(event) {
			toolbar_buttons.viewAddonsExceptions(event);
		},
		onCommand: function(event) {
			toolbar_buttons.installAddons(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'java-toggle',
		label: buttonStrings.get('java-toggle.label'),
		tooltiptext: buttonStrings.get('java-toggle.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.JavaToggle.toggle(event);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "security.enable_java", "java-toggle");
		}
	});

	CustomizableUI.createWidget({
		id: 'select-all',
		type: 'custom',
		label: buttonStrings.get('select-all.label'),
		tooltiptext: buttonStrings.get('select-all.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'select-all';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('select-all.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('select-all.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_selectAll");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_selectAll");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-twitter-button',
		label: buttonStrings.get('tb-twitter-button.label'),
		tooltiptext: buttonStrings.get('tb-twitter-button.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.twitter',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.twitter',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'reset',
		type: 'custom',
		label: buttonStrings.get('reset.label'),
		tooltiptext: buttonStrings.get('reset.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'reset';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('reset.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('reset.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_fullZoomReset");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_fullZoomReset");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'about-config',
		label: buttonStrings.get('about-config.label'),
		tooltiptext: buttonStrings.get('about-config.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openPageInTab('about:config', event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-search-resize',
		label: buttonStrings.get('tb-search-resize.label'),
		tooltiptext: buttonStrings.get('tb-search-resize.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.searchBarSize(event, '$');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.SearchResizeLoad(document);
		}
	});

	CustomizableUI.createWidget({
		id: 'close-all-tabs',
		label: buttonStrings.get('close-all-tabs.label'),
		tooltiptext: buttonStrings.get('close-all-tabs.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.BrowserCloseAllTabs(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'close-tab',
		type: 'custom',
		label: buttonStrings.get('close-tab.label'),
		tooltiptext: buttonStrings.get('close-tab.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'close-tab';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('close-tab.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('close-tab.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_close");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_close");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-page-info-media',
		label: buttonStrings.get('tb-page-info-media.label'),
		tooltiptext: buttonStrings.get('tb-page-info-media.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.BrowserPageInfo(null, 'mediaTab');
		}
	});

	CustomizableUI.createWidget({
		id: 'websearch',
		type: 'custom',
		label: buttonStrings.get('websearch.label'),
		tooltiptext: buttonStrings.get('websearch.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'websearch';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('websearch.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('websearch.tooltip'));
			toolbarbutton_0.setAttribute("command", "Tools:Search");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-movies',
		label: buttonStrings.get('stop-movies.label'),
		tooltiptext: buttonStrings.get('stop-movies.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.stopContent(aThis, 'movies');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadContectBlocker(document, "extension.tbutton.movies", "movies",
		"stop-movies", "chrome://toolbar-buttons/content/files/movies.css");
		}
	});

	CustomizableUI.createWidget({
		id: 'firefox-extension',
		label: buttonStrings.get('firefox-extension.label'),
		tooltiptext: buttonStrings.get('firefox-extension.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.firefox-ext',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.firefox-ext',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'read-news',
		label: buttonStrings.get('read-news.label'),
		tooltiptext: buttonStrings.get('read-news.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.readNews(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'clear-data',
		type: 'custom',
		label: buttonStrings.get('clear-data.label'),
		tooltiptext: buttonStrings.get('clear-data.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'clear-data';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('clear-data.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('clear-data.tooltip'));
			toolbarbutton_0.setAttribute("command", "Tools:Sanitize");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'javaScriptConsole',
		label: buttonStrings.get('javaScriptConsole.label'),
		tooltiptext: buttonStrings.get('javaScriptConsole.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toJavaScriptConsole(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-search-plus',
		label: buttonStrings.get('tb-search-plus.label'),
		tooltiptext: buttonStrings.get('tb-search-plus.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.searchBarSize(event, 1);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-view-menu',
		label: buttonStrings.get('tb-view-menu.label'),
		tooltiptext: buttonStrings.get('tb-view-menu.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.showAMenu(event, 'menu_View', 'view-menu');
		}
	});

	CustomizableUI.createWidget({
		id: 'clear-url',
		type: 'custom',
		label: buttonStrings.get('clear-url.label'),
		tooltiptext: buttonStrings.get('clear-url.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'clear-url';
			toolbarbutton_0.setAttribute("type", "checkbox");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('clear-url.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('clear-url.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				var aThis = event.target;
			toolbar_buttons.hideURLText(aThis);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'google',
		label: buttonStrings.get('google.label'),
		tooltiptext: buttonStrings.get('google.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.google',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.google',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'read-mail',
		label: buttonStrings.get('read-mail.label'),
		tooltiptext: buttonStrings.get('read-mail.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.readMail(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'reduce',
		type: 'custom',
		label: buttonStrings.get('reduce.label'),
		tooltiptext: buttonStrings.get('reduce.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'reduce';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('reduce.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('reduce.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_fullZoomReduce");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_fullZoomReduce");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-clone-tab',
		label: buttonStrings.get('tb-clone-tab.label'),
		tooltiptext: buttonStrings.get('tb-clone-tab.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.cloneTab(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'toggle-proxy',
		type: 'custom',
		label: buttonStrings.get('toggle-proxy.label'),
		tooltiptext: buttonStrings.get('toggle-proxy.tooltip'),
		onCreated: function(aNode){
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "network.proxy.type", "toggle-proxy");
		},
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'toggle-proxy';
			toolbarbutton_0.setAttribute("type", "menu-button");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('toggle-proxy.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('toggle-proxy.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.toggleTheProxy();
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('click', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('command', function(event) {
				toolbar_buttons.setProxyValue(event); event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.setProxyMenuItem(event, aThis);
			}, false);
			var menuitem_2 = document.createElement('menuitem');
			menuitem_2.setAttribute("type", "radio");
			menuitem_2.setAttribute('label', buttonStrings.get('toggle.proxy.direct'));
			menuitem_2.setAttribute("name", "toggle-proxy-settings");
			menuitem_2.setAttribute("value", "0");
			menupopup_1.appendChild(menuitem_2);
			var menuitem_3 = document.createElement('menuitem');
			menuitem_3.setAttribute("type", "radio");
			menuitem_3.setAttribute('label', buttonStrings.get('toggle.proxy.manual'));
			menuitem_3.setAttribute("name", "toggle-proxy-settings");
			menuitem_3.setAttribute("value", "1");
			menupopup_1.appendChild(menuitem_3);
			var menuitem_4 = document.createElement('menuitem');
			menuitem_4.setAttribute("type", "radio");
			menuitem_4.setAttribute('label', buttonStrings.get('toggle.proxy.auto.configuration'));
			menuitem_4.setAttribute("name", "toggle-proxy-settings");
			menuitem_4.setAttribute("value", "2");
			menupopup_1.appendChild(menuitem_4);
			var menuitem_5 = document.createElement('menuitem');
			menuitem_5.setAttribute("type", "radio");
			menuitem_5.setAttribute('label', buttonStrings.get('toggle.proxy.auto.detect'));
			menuitem_5.setAttribute("name", "toggle-proxy-settings");
			menuitem_5.setAttribute("value", "4");
			menupopup_1.appendChild(menuitem_5);
			var menuitem_6 = document.createElement('menuitem');
			menuitem_6.setAttribute("type", "radio");
			menuitem_6.setAttribute('label', buttonStrings.get('toggle.proxy.system'));
			menuitem_6.setAttribute("name", "toggle-proxy-settings");
			menuitem_6.setAttribute("value", "5");
			menupopup_1.appendChild(menuitem_6);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmarks-menu-button1',
		type: 'custom',
		label: buttonStrings.get('bookmarks-menu-button.label'),
		tooltiptext: buttonStrings.get('bookmarks-menu-button.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'bookmarks-menu-button1';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('bookmarks-menu-button.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('bookmarks-menu-button.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				var aThis = event.target;
			aThis._placesView = null; toolbar_buttons.showAMenu(event,'bookmarksMenu');
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.addEventListener('dragenter', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragEnter(event);
			}, false);
			toolbarbutton_0.addEventListener('dragover', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragOver(event);
			}, false);
			toolbarbutton_0.addEventListener('drop', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDrop(event);
			}, false);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmarks-menu-button2',
		type: 'custom',
		label: buttonStrings.get('bookmarks-menu-button.label'),
		tooltiptext: buttonStrings.get('bookmarks-menu-button.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'bookmarks-menu-button2';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('bookmarks-menu-button.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('bookmarks-menu-button.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.addEventListener('dragenter', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragEnter(event);
			}, false);
			toolbarbutton_0.addEventListener('dragover', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragOver(event);
			}, false);
			toolbarbutton_0.addEventListener('drop', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDrop(event);
			}, false);
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.id = 'bookmarksMenuPopupCustom';
			menupopup_1.setAttribute("type", "places");
			menupopup_1.addEventListener('click', function(event) {
				var aThis = event.target;
			var window = event.target.ownerDocument.defaultView;
			window.BookmarksEventHandler.onClick(event, aThis.parentNode._placesView);
			}, false);
			menupopup_1.addEventListener('command', function(event) {
				var aThis = event.target;
			var window = event.target.ownerDocument.defaultView;
			window.BookmarksEventHandler.onCommand(event, aThis.parentNode._placesView);
			}, false);
			menupopup_1.setAttribute("place", "place:folder=BOOKMARKS_MENU");
			menupopup_1.setAttribute("context", "placesContext");
			menupopup_1.setAttribute("openInTabs", "children");
			menupopup_1.setAttribute("placespopup", "true");
			menupopup_1.setAttribute("popupsinherittooltip", "true");
			menupopup_1.addEventListener('popupshowing', function(event) {
				toolbar_buttons.bookmarksMenuButtonPopupShowing(event);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'gmail',
		label: buttonStrings.get('gmail.label'),
		tooltiptext: buttonStrings.get('gmail.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.gmail',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.gmail',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-toggle-popup-blocker',
		label: buttonStrings.get('tb-toggle-popup-blocker.label'),
		tooltiptext: buttonStrings.get('tb-toggle-popup-blocker.tooltip'),
		onClick: function(event) {
			toolbar_buttons.viewPopupExceptions(event);
		},
		onCommand: function(event) {
			toolbar_buttons.togglePopUp(event);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "dom.disable_open_during_load", "tb-toggle-popup-blocker");
		}
	});

	CustomizableUI.createWidget({
		id: 'preferences',
		type: 'custom',
		label: buttonStrings.get('preferences.label'),
		tooltiptext: buttonStrings.get('preferences.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'preferences';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('preferences.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('preferences.tooltip'));
			toolbarbutton_0.setAttribute("command", "menu_preferences");
			toolbarbutton_0.addEventListener('click', function(event) {
				toolbar_buttons.openOptionsTab(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'label-all-blank',
		label: buttonStrings.get('label-all-blank.label'),
		tooltiptext: buttonStrings.get('label-all-blank.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.renameAllTabsBlank(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'print-preview',
		type: 'custom',
		label: buttonStrings.get('print-preview.label'),
		tooltiptext: buttonStrings.get('print-preview.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'print-preview';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('print-preview.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('print-preview.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_printPreview");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'wikipedia',
		label: buttonStrings.get('wikipedia.label'),
		tooltiptext: buttonStrings.get('wikipedia.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.wikipedia',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.wikipedia',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'reload-all-tabs',
		label: buttonStrings.get('reload-all-tabs.label'),
		tooltiptext: buttonStrings.get('reload-all-tabs.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.gBrowser.reloadAllTabs();
		}
	});

	CustomizableUI.createWidget({
		id: 'exit',
		type: 'custom',
		label: buttonStrings.get('exit.label'),
		tooltiptext: buttonStrings.get('exit.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'exit';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('exit.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('exit.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_quitApplication");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_quitApplication");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'import',
		label: buttonStrings.get('import.label'),
		tooltiptext: buttonStrings.get('import.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openMigrateWindow(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-clear-url',
		label: buttonStrings.get('tb-clear-url.label'),
		tooltiptext: buttonStrings.get('tb-clear-url.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.clearBar(event, 'url');
		}
	});

	CustomizableUI.createWidget({
		id: 'favorite-page',
		label: buttonStrings.get('favorite-page.label'),
		tooltiptext: buttonStrings.get('favorite-page.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.OpenLinkPref('url.favorite',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'thunderbird-theme',
		label: buttonStrings.get('thunderbird-theme.label'),
		tooltiptext: buttonStrings.get('thunderbird-theme.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.thunderbird-theme',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.thunderbird-theme',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'bottom-page',
		label: buttonStrings.get('bottom-page.label'),
		tooltiptext: buttonStrings.get('bottom-page.tooltip'),
		onCommand: function(event) {
			var document = event.target.ownerDocument;
			document.commandDispatcher.getControllerForCommand('cmd_scrollBottom').doCommand('cmd_scrollBottom');
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-all-menus',
		type: 'custom',
		label: buttonStrings.get('tb-all-menus.label'),
		tooltiptext: buttonStrings.get('tb-all-menus.tooltip'),
		onCreated: function(aNode){
			var document = aNode.ownerDocument;
			toolbar_buttons.allMenusStartUp(document);
		},
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-all-menus';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-all-menus.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-all-menus.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.id = 'tb-all-menus-popup';
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.loadAllMenusMenu(aThis, event);
			}, false);
			menupopup_1.addEventListener('popuphidden', function(event) {
				var aThis = event.target;
			toolbar_buttons.allMenusReturnPopups(aThis, event);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'undo',
		type: 'custom',
		label: buttonStrings.get('undo.label'),
		tooltiptext: buttonStrings.get('undo.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'undo';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('undo.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('undo.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_undo");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_undo");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'min-font-size',
		label: buttonStrings.get('min-font-size.label'),
		tooltiptext: buttonStrings.get('min-font-size.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toggleMinimumFontSize();
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "font.minimum-size", "min-font-size");
		}
	});

	CustomizableUI.createWidget({
		id: 'image-toggle',
		label: buttonStrings.get('image-toggle.label'),
		tooltiptext: buttonStrings.get('image-toggle.tooltip'),
		onClick: function(event) {
			toolbar_buttons.viewImageExceptions(event);
		},
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.toggleImages(aThis);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "permissions.default.image", "image-toggle");
		}
	});

	CustomizableUI.createWidget({
		id: 'reload-skip-cache',
		type: 'custom',
		label: buttonStrings.get('reload-skip-cache.label'),
		tooltiptext: buttonStrings.get('reload-skip-cache.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'reload-skip-cache';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('reload-skip-cache.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('reload-skip-cache.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:ReloadSkipCache");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-show-all-history',
		type: 'custom',
		label: buttonStrings.get('tb-show-all-history.label'),
		tooltiptext: buttonStrings.get('tb-show-all-history.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-show-all-history';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-show-all-history.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-show-all-history.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:ShowAllHistory");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-clear-cache',
		label: buttonStrings.get('tb-clear-cache.label'),
		tooltiptext: buttonStrings.get('tb-clear-cache.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.goClearBrowserCache();
		}
	});

	CustomizableUI.createWidget({
		id: 'show-frame',
		type: 'custom',
		label: buttonStrings.get('show-frame.label'),
		tooltiptext: buttonStrings.get('show-frame.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'show-frame';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('show-frame.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('show-frame.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.showOnlyThisFrame(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("observes", "isImage");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-saved-passwords',
		label: buttonStrings.get('tb-saved-passwords.label'),
		tooltiptext: buttonStrings.get('tb-saved-passwords.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openPasswordsTab(event);
		},
		onCommand: function(event) {
			toolbar_buttons.viewPasswords(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-dynamic-content',
		label: buttonStrings.get('stop-dinamic-content.label'),
		tooltiptext: buttonStrings.get('stop-dinamic-content.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.stopContent(aThis, 'enable_all');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadContectBlocker(document, "extension.tbutton.enable_all", "enable_all",
		"stop-dynamic-content", "chrome://toolbar-buttons/content/files/dcontent.css");
		}
	});

	CustomizableUI.createWidget({
		id: 'extensions',
		label: buttonStrings.get('extensions.label'),
		tooltiptext: buttonStrings.get('extensions.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.OpenAddonsMgr(event, 'extensions', 'addons://list/extension');
		}
	});

	CustomizableUI.createWidget({
		id: 'statusbar-toggle',
		label: buttonStrings.get('statusbar-toggle.label'),
		tooltiptext: buttonStrings.get('statusbar-toggle.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toogleAddonsBar(event);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadAddonsBar(document, false);
		}
	});

	CustomizableUI.createWidget({
		id: 'addons',
		type: 'custom',
		label: buttonStrings.get('addons.label'),
		tooltiptext: buttonStrings.get('addons.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'addons';
			toolbarbutton_0.setAttribute("type", "menu-button");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('addons.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('addons.tooltip'));
			toolbarbutton_0.setAttribute("command", "Tools:Addons");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_openAddons");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('click', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			var menuitem_2 = document.createElement('menuitem');
			menuitem_2.id = 'tb-addons-extensions';
			menuitem_2.setAttribute('label', buttonStrings.get('extensions.label'));
			menuitem_2.addEventListener('command', function(event) {
				toolbar_buttons.OpenAddonsMgr(event, 'extensions', 'addons://list/extension');
			}, false);
			menupopup_1.appendChild(menuitem_2);
			var menuitem_3 = document.createElement('menuitem');
			menuitem_3.id = 'tb-addons-themes';
			menuitem_3.setAttribute('label', buttonStrings.get('themes.label'));
			menuitem_3.addEventListener('command', function(event) {
				toolbar_buttons.OpenAddonsMgr(event, 'themes', 'addons://list/theme');
			}, false);
			menupopup_1.appendChild(menuitem_3);
			var menuseparator_4 = document.createElement('menuseparator');
			menupopup_1.appendChild(menuseparator_4);
			var menuitem_5 = document.createElement('menuitem');
			menuitem_5.id = 'tb-addons-allowed-sites';
			menuitem_5.setAttribute('label', buttonStrings.get('tb-addons-exceptions.label'));
			menuitem_5.addEventListener('command', function(event) {
				toolbar_buttons.openAddonsExceptions(event);
			}, false);
			menupopup_1.appendChild(menuitem_5);
			var menuseparator_6 = document.createElement('menuseparator');
			menupopup_1.appendChild(menuseparator_6);
			var menuitem_7 = document.createElement('menuitem');
			menuitem_7.id = 'tb-addons-install';
			menuitem_7.setAttribute('label', buttonStrings.get('installaddons.label'));
			menuitem_7.addEventListener('command', function(event) {
				toolbar_buttons.installAddons(event);
			}, false);
			menupopup_1.appendChild(menuitem_7);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmark-nopop',
		label: buttonStrings.get('bookmark-nopop.label'),
		tooltiptext: buttonStrings.get('bookmark-nopop.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.bookmarkNoPopup(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-open',
		type: 'custom',
		label: buttonStrings.get('tb-open.label'),
		tooltiptext: buttonStrings.get('tb-open.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-open';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-open.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-open.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:OpenFile");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "openFileKb");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'javascript-toggle',
		label: buttonStrings.get('javascript-toggle.label'),
		tooltiptext: buttonStrings.get('javascript-toggle.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.toggleJavaScript(aThis);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "javascript.enabled", "javascript-toggle")
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-iframe',
		label: buttonStrings.get('stop-iframe.label'),
		tooltiptext: buttonStrings.get('stop-iframe.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.stopContent(aThis, 'iframe');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadContectBlocker(document, "extension.tbutton.iframe", "iframe",
		"stop-iframe", "chrome://toolbar-buttons/content/files/iframe.css");
		}
	});

	CustomizableUI.createWidget({
		id: 'redo',
		type: 'custom',
		label: buttonStrings.get('redo.label'),
		tooltiptext: buttonStrings.get('redo.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'redo';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('redo.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('redo.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_redo");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_redo");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'next-tab',
		label: buttonStrings.get('next-tab.label'),
		tooltiptext: buttonStrings.get('next-tab.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.gBrowser.mTabContainer.advanceSelectedTab(1, true);
		}
	});

	CustomizableUI.createWidget({
		id: 'saveas',
		type: 'custom',
		label: buttonStrings.get('saveas.label'),
		tooltiptext: buttonStrings.get('saveas.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'saveas';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('saveas.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('saveas.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:SavePage");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'delete-button',
		type: 'custom',
		label: buttonStrings.get('delete.label'),
		tooltiptext: buttonStrings.get('delete.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'delete-button';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('delete.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('delete.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_delete");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_delete");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-clear-search',
		label: buttonStrings.get('tb-clear-search.label'),
		tooltiptext: buttonStrings.get('tb-clear-search.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.clearBar(event, 'search');
		}
	});

	CustomizableUI.createWidget({
		id: 'snap-back',
		label: buttonStrings.get('snap-back.label'),
		tooltiptext: buttonStrings.get('snap-back.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.getWebNavigation().gotoIndex(0);
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-all',
		label: buttonStrings.get('stop-all.label'),
		tooltiptext: buttonStrings.get('stop-all.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.stopAll(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-toggle-menu-bar',
		label: buttonStrings.get('tb-toggle-menu-bar.label'),
		tooltiptext: buttonStrings.get('tb-toggle-menu-bar.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toggleToolbar(event,'toolbar-menubar');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadToggleToolbar(document, "tb-toggle-menu-bar", "toolbar-menubar");
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmark',
		type: 'custom',
		label: buttonStrings.get('bookmark.label'),
		tooltiptext: buttonStrings.get('bookmark.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'bookmark';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('bookmark.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('bookmark.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:AddBookmarkAs");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'customize-toolbar',
		type: 'custom',
		label: buttonStrings.get('customize-toolbar.label'),
		tooltiptext: buttonStrings.get('customize-toolbar.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'customize-toolbar';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('customize-toolbar.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('customize-toolbar.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_CustomizeToolbars");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'top-page',
		label: buttonStrings.get('top-page.label'),
		tooltiptext: buttonStrings.get('top-page.tooltip'),
		onCommand: function(event) {
			var document = event.target.ownerDocument;
			document.commandDispatcher.getControllerForCommand('cmd_scrollTop').doCommand('cmd_scrollTop');
		}
	});

	CustomizableUI.createWidget({
		id: 'find-again',
		type: 'custom',
		label: buttonStrings.get('find-again.label'),
		tooltiptext: buttonStrings.get('find-again.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'find-again';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('find-again.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('find-again.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_findAgain");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_findAgain");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tab-list',
		type: 'custom',
		label: buttonStrings.get('tab-list.label'),
		tooltiptext: buttonStrings.get('tab-list.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tab-list';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tab-list.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tab-list.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.tabListDropDown(aThis);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-flash',
		label: buttonStrings.get('stop-flash.label'),
		tooltiptext: buttonStrings.get('stop-flash.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.stopContent(aThis, 'flash');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadContectBlocker(document, "extension.tbutton.flash", "flash",
		"stop-flash", "chrome://toolbar-buttons/content/files/flash.css");
		}
	});

	CustomizableUI.createWidget({
		id: 'inspecter',
		label: buttonStrings.get('inspecter.label'),
		tooltiptext: buttonStrings.get('inspecter.tooltip'),
		onCommand: function(event) {
			var document = event.target.ownerDocument;
			var window = event.target.ownerDocument.defaultView;
			toolbar_buttons.openDomInspector(event, window.content.document);
		}
	});

	CustomizableUI.createWidget({
		id: 'toggle-styles',
		type: 'custom',
		label: buttonStrings.get('toggle-styles.label'),
		tooltiptext: buttonStrings.get('toggle-styles.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'toggle-styles';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('toggle-styles.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('toggle-styles.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.disableStyle(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("observes", "isImage");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'translate',
		label: buttonStrings.get('translate.label'),
		tooltiptext: buttonStrings.get('translate.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.TranslatePage(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'pageinfo',
		type: 'custom',
		label: buttonStrings.get('pageinfo.label'),
		tooltiptext: buttonStrings.get('pageinfo.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'pageinfo';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('pageinfo.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('pageinfo.tooltip'));
			toolbarbutton_0.setAttribute("command", "View:PageInfo");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_viewInfo");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-cookies',
		type: 'custom',
		label: buttonStrings.get('stop-cookies.label'),
		tooltiptext: buttonStrings.get('stop-cookies.tooltip'),
		onCreated: function(aNode){
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "network.cookie.cookieBehavior", "stop-cookies");
		},
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'stop-cookies';
			toolbarbutton_0.setAttribute("type", "menu-button");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('stop-cookies.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('stop-cookies.tooltip'));
			toolbarbutton_0.addEventListener('click', function(event) {
				toolbar_buttons.viewCookieExceptions(event);
			}, false);
			toolbarbutton_0.addEventListener('command', function(event) {
				var aThis = event.target;
			toolbar_buttons.toggleCookies(aThis);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('click', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('command', function(event) {
				toolbar_buttons.setCookieValue(event); event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.setCookieMenuItem(aThis);
			}, false);
			var menuitem_2 = document.createElement('menuitem');
			menuitem_2.setAttribute("type", "radio");
			menuitem_2.setAttribute('label', buttonStrings.get('stop-cookies.allow'));
			menuitem_2.setAttribute("name", "toggle-cookie-settings");
			menuitem_2.setAttribute("value", "0");
			menupopup_1.appendChild(menuitem_2);
			var menuitem_3 = document.createElement('menuitem');
			menuitem_3.setAttribute("type", "radio");
			menuitem_3.setAttribute('label', buttonStrings.get('stop-cookies.thirdparty'));
			menuitem_3.setAttribute("name", "toggle-cookie-settings");
			menuitem_3.setAttribute("value", "1");
			menupopup_1.appendChild(menuitem_3);
			var menuitem_4 = document.createElement('menuitem');
			menuitem_4.setAttribute("type", "radio");
			menuitem_4.setAttribute('label', buttonStrings.get('stop-cookies.block'));
			menuitem_4.setAttribute("name", "toggle-cookie-settings");
			menuitem_4.setAttribute("value", "2");
			menupopup_1.appendChild(menuitem_4);
			var menuitem_5 = document.createElement('menuitem');
			menuitem_5.setAttribute("type", "radio");
			menuitem_5.setAttribute('label', buttonStrings.get('stop-cookies.privacy'));
			menuitem_5.setAttribute("name", "toggle-cookie-settings");
			menuitem_5.setAttribute("value", "3");
			menupopup_1.appendChild(menuitem_5);
			var menuseparator_6 = document.createElement('menuseparator');
			menupopup_1.appendChild(menuseparator_6);
			var menuitem_7 = document.createElement('menuitem');
			menuitem_7.setAttribute('label', buttonStrings.get('tb-cookie-manager.label'));
			menuitem_7.addEventListener('command', function(event) {
				toolbar_buttons.viewCookies(event);
			}, false);
			menupopup_1.appendChild(menuitem_7);
			var menuitem_8 = document.createElement('menuitem');
			menuitem_8.setAttribute('label', buttonStrings.get('tb-cookie-exceptions.label'));
			menuitem_8.addEventListener('command', function(event) {
				toolbar_buttons.openCookieExceptions(event);
			}, false);
			menupopup_1.appendChild(menuitem_8);
			var menuitem_9 = document.createElement('menuitem');
			menuitem_9.setAttribute('label', buttonStrings.get('tb-delete-cookies.label'));
			menuitem_9.addEventListener('command', function(event) {
				toolbar_buttons.deleteAllCookies();
			}, false);
			menupopup_1.appendChild(menuitem_9);
			var menuitem_10 = document.createElement('menuitem');
			menuitem_10.setAttribute('label', buttonStrings.get('tb-delete-session-cookies.label'));
			menuitem_10.addEventListener('command', function(event) {
				toolbar_buttons.deleteSessionCookie();
			}, false);
			menupopup_1.appendChild(menuitem_10);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmark-tabs',
		type: 'custom',
		label: buttonStrings.get('bookmark-tabs.label'),
		tooltiptext: buttonStrings.get('bookmark-tabs.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'bookmark-tabs';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('bookmark-tabs.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('bookmark-tabs.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:BookmarkAllTabs");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'undo-close-tab',
		type: 'custom',
		label: buttonStrings.get('undo-close-tab.label'),
		tooltiptext: buttonStrings.get('undo-close-tab.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'undo-close-tab';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('undo-close-tab.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('undo-close-tab.tooltip'));
			toolbarbutton_0.setAttribute("command", "History:UndoCloseTab");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-file-menu',
		label: buttonStrings.get('tb-file-menu.label'),
		tooltiptext: buttonStrings.get('tb-file-menu.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.showAMenu(event, 'menu_File', 'file-menu');
		}
	});

	CustomizableUI.createWidget({
		id: 'rename-tab',
		label: buttonStrings.get('rename-tab.label'),
		tooltiptext: buttonStrings.get('rename-tab.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.renameTab(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'paypal',
		label: buttonStrings.get('paypal.label'),
		tooltiptext: buttonStrings.get('paypal.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.paypal',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.paypal',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'about-mem-cache',
		label: buttonStrings.get('about-mem-cache.label'),
		tooltiptext: buttonStrings.get('about-mem-cache.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openPageInTab('about:cache?storage=memory', event);
		}
	});

	CustomizableUI.createWidget({
		id: 'page-source',
		label: buttonStrings.get('page-source.label'),
		tooltiptext: buttonStrings.get('page-source.tooltip'),
		onClick: function(event) {
			toolbar_buttons.ViewPageSourceNow(event);
		},
		onCommand: function(event) {
			var document = event.target.ownerDocument;
			var window = event.target.ownerDocument.defaultView;
			window.BrowserViewSourceOfDocument(window.content.document);
		}
	});

	CustomizableUI.createWidget({
		id: 'thunderbird-extension',
		label: buttonStrings.get('thunderbird-extension.label'),
		tooltiptext: buttonStrings.get('thunderbird-extension.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.thunderbird-ext',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.thunderbird-ext',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'personal-bookmarks-menu-button',
		type: 'custom',
		label: buttonStrings.get('personal-bookmarks-menu-button.label'),
		tooltiptext: buttonStrings.get('personal-bookmarks-menu-button.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'personal-bookmarks-menu-button';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('personal-bookmarks-menu-button.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('personal-bookmarks-menu-button.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.addEventListener('dragenter', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragEnter(event);
			}, false);
			toolbarbutton_0.addEventListener('dragover', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDragOver(event);
			}, false);
			toolbarbutton_0.addEventListener('drop', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.PlacesMenuDNDHandler.onDrop(event);
			}, false);
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.id = 'bookmarksMenuPopupCustomPersonal';
			menupopup_1.setAttribute("type", "places");
			menupopup_1.addEventListener('click', function(event) {
				var aThis = event.target;
			var window = event.target.ownerDocument.defaultView;
			window.BookmarksEventHandler.onClick(event, aThis.parentNode._placesView);
			}, false);
			menupopup_1.addEventListener('command', function(event) {
				var aThis = event.target;
			var window = event.target.ownerDocument.defaultView;
			window.BookmarksEventHandler.onCommand(event, aThis.parentNode._placesView);
			}, false);
			menupopup_1.setAttribute("place", "place:folder=TOOLBAR");
			menupopup_1.setAttribute("context", "placesContext");
			menupopup_1.setAttribute("openInTabs", "children");
			menupopup_1.setAttribute("placespopup", "true");
			menupopup_1.setAttribute("popupsinherittooltip", "true");
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.personalBookmakrsMenuButon(aThis, event);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'restart-app',
		label: buttonStrings.get('restart-app.label'),
		tooltiptext: buttonStrings.get('restart-app.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.restartMozilla();
		}
	});

	CustomizableUI.createWidget({
		id: 'previous-tab',
		label: buttonStrings.get('previous-tab.label'),
		tooltiptext: buttonStrings.get('previous-tab.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.gBrowser.mTabContainer.advanceSelectedTab(-1, true);
		}
	});

	CustomizableUI.createWidget({
		id: 'about-application',
		label: buttonStrings.get('about-application.label'),
		tooltiptext: buttonStrings.get('about-application.tooltip') + ' ' + Cc['@mozilla.org/xre/app-info;1'].createInstance(Ci.nsIXULAppInfo).name,
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.openAboutDialog();
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-history-menu',
		label: buttonStrings.get('tb-history-menu.label'),
		tooltiptext: buttonStrings.get('tb-history-menu.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.showAMenu(event, 'history-menu');
		}
	});

	CustomizableUI.createWidget({
		id: 'ebay',
		label: buttonStrings.get('ebay.label'),
		tooltiptext: buttonStrings.get('ebay.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.ebay',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.ebay',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-tools-menu',
		label: buttonStrings.get('tb-tools-menu.label'),
		tooltiptext: buttonStrings.get('tb-tools-menu.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.showAMenu(event, 'tasksMenu', 'menu_Tools', 'tools-menu');
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-search-go-button',
		label: buttonStrings.get('tb-search-go-button.label'),
		tooltiptext: buttonStrings.get('tb-search-go-button.tooltip'),
		onCommand: function(event) {
			var document = event.target.ownerDocument;
			document.getElementById('searchbar').handleSearchCommand(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'yahoo-button',
		label: buttonStrings.get('yahoo-button.label'),
		tooltiptext: buttonStrings.get('yahoo-button.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.yahoo',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.yahoo',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'change-text-direction',
		label: buttonStrings.get('change-text-direction.label'),
		tooltiptext: buttonStrings.get('change-text-direction.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.changeTextDirection(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'save-frame',
		label: buttonStrings.get('save-frame.label'),
		tooltiptext: buttonStrings.get('save-frame.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.saveFrame(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'pagesetup',
		type: 'custom',
		label: buttonStrings.get('pagesetup.label'),
		tooltiptext: buttonStrings.get('pagesetup.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'pagesetup';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('pagesetup.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('pagesetup.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_pageSetup");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'hotmail-button',
		label: buttonStrings.get('hotmail-button.label'),
		tooltiptext: buttonStrings.get('hotmail-button.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.hotmail',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.hotmail',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-new-tab',
		type: 'custom',
		label: buttonStrings.get('tb-new-tab.label'),
		tooltiptext: buttonStrings.get('tb-new-tab.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-new-tab';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-new-tab.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-new-tab.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_newNavigatorTab");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_newNavigatorTab");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'about-cache',
		label: buttonStrings.get('about-cache.label'),
		tooltiptext: buttonStrings.get('about-cache.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.openPageInTab('about:cache', event);
		}
	});

	CustomizableUI.createWidget({
		id: 'minimize-window',
		label: buttonStrings.get('minimize-window.label'),
		tooltiptext: buttonStrings.get('minimize-window.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.minimize();
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-edit-menu',
		label: buttonStrings.get('tb-edit-menu.label'),
		tooltiptext: buttonStrings.get('tb-edit-menu.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.showAMenu(event, 'menu_Edit', 'edit-menu');
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-about-about',
		type: 'view',
		label: buttonStrings.get('tb-about-about.label'),
		tooltiptext: buttonStrings.get('tb-about-about.tooltip'),
		viewId: 'tb-about-about-view',
		onBeforeCreated: function (document) {
			var popupset = document.getElementById('PanelUI-multiView');
			if(popupset) {
				var menupopup_1 = document.createElement('panelview');
			} else {
			    var menupopup_1 = document.createElement('menupopup');
				popupset = document.documentElement;
			}
			menupopup_1.id = 'tb-about-about-view';
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.aboutAboutMenu(aThis);
			}, false);
			popupset.appendChild(menupopup_1);
		},
		onViewShowing: function(event){
			var document = event.target.ownerDocument;
			toolbar_buttons.aboutAboutMenu(document.getElementById('tb-about-about-view'));
		}
	});

	CustomizableUI.createWidget({
		id: 'bookmark-manager',
		label: buttonStrings.get('bookmark-manager.label'),
		tooltiptext: buttonStrings.get('bookmark-manager.tooltip'),
		onClick: function(event) {
			toolbar_buttons.clickBookmarkManager(event);
		},
		onCommand: function(event) {
			toolbar_buttons.openBookmarkManager(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'up-directory',
		type: 'custom',
		label: buttonStrings.get('up-directory.label'),
		tooltiptext: buttonStrings.get('up-directory.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'up-directory';
			toolbarbutton_0.setAttribute("type", "menu-button");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('up-directory.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('up-directory.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.upOneFolder(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.loadHigherFolders(aThis);
			}, false);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'clipboard-button',
		type: 'custom',
		label: buttonStrings.get('clipboard.label'),
		tooltiptext: buttonStrings.get('clipboard.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'clipboard-button';
			toolbarbutton_0.setAttribute("type", "menu-button");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('clipboard.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('clipboard.tooltip'));
			toolbarbutton_0.addEventListener('click', function(event) {
				toolbar_buttons.clipboardLink.open(event);
			}, false);
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.clipboardLink.openCommand(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.id = 'clipboard-button-menu';
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			var menuitem_2 = document.createElement('menuitem');
			menuitem_2.id = 'clipboard-button-load';
			menuitem_2.setAttribute('label', buttonStrings.get('clipboard.menuitem'));
			menuitem_2.addEventListener('command', function(event) {
				toolbar_buttons.clipboardLink.OpenLink(event);
			}, false);
			menupopup_1.appendChild(menuitem_2);
			var menuitem_3 = document.createElement('menuitem');
			menuitem_3.id = 'clipboard-button-tab';
			menuitem_3.setAttribute('label', buttonStrings.get('clipboard.newtab'));
			menuitem_3.addEventListener('command', function(event) {
				toolbar_buttons.clipboardLink.OpenNewTab(event);
			}, false);
			menupopup_1.appendChild(menuitem_3);
			var menuitem_4 = document.createElement('menuitem');
			menuitem_4.id = 'clipboard-button-window';
			menuitem_4.setAttribute('label', buttonStrings.get('clipboard.newwindow'));
			menuitem_4.addEventListener('command', function(event) {
				toolbar_buttons.clipboardLink.OpenWindow(event);
			}, false);
			menupopup_1.appendChild(menuitem_4);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'toggle-bookmark-toolbar',
		label: buttonStrings.get('bookmark-toolbar.label'),
		tooltiptext: buttonStrings.get('bookmark-toolbar.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toggleToolbar(event, 'PersonalToolbar');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadToggleToolbar(document, "toggle-bookmark-toolbar", "PersonalToolbar");
		}
	});

	CustomizableUI.createWidget({
		id: 'stop-animation',
		label: buttonStrings.get('stop-animation.label'),
		tooltiptext: buttonStrings.get('stop-animation.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.stopContent(aThis, 'marquee');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadContectBlocker(document, "extension.tbutton.marquee", "marquee",
		"stop-animation", "chrome://toolbar-buttons/content/files/marquee.css",
		toolbar_buttons.setAnimationState);
		}
	});

	CustomizableUI.createWidget({
		id: 'enlarge',
		type: 'custom',
		label: buttonStrings.get('enlarge.label'),
		tooltiptext: buttonStrings.get('enlarge.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'enlarge';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('enlarge.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('enlarge.tooltip'));
			toolbarbutton_0.setAttribute("command", "cmd_fullZoomEnlarge");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_fullZoomEnlarge");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'reload-proxy',
		label: buttonStrings.get('reload-proxy.label'),
		tooltiptext: buttonStrings.get('reload-proxy.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.reloadPAC();
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "network.proxy.type", null, toolbar_buttons.setProxyButtonState);
toolbar_buttons.loadPrefWatcher(document, "network.proxy.autoconfig_url", null, toolbar_buttons.setProxyButtonState);
		}
	});

	CustomizableUI.createWidget({
		id: 'open-current-frame',
		type: 'custom',
		label: buttonStrings.get('open-current-frame.label'),
		tooltiptext: buttonStrings.get('open-current-frame.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'open-current-frame';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('open-current-frame.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('open-current-frame.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				toolbar_buttons.showOnlyThisFrame(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("observes", "isImage");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'toggle-toolbar',
		label: buttonStrings.get('toggle-toolbar.label'),
		tooltiptext: buttonStrings.get('toggle-toolbar.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.toggleToolbar(event, 'nav-bar');
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadToggleToolbar(document, "toggle-toolbar", "nav-bar");
		}
	});

	CustomizableUI.createWidget({
		id: 'profile-folder',
		label: buttonStrings.get('profile-folder.label'),
		tooltiptext: buttonStrings.get('profile-folder.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.profileFolder();
		}
	});

	CustomizableUI.createWidget({
		id: 'full-screen',
		label: buttonStrings.get('full-screen.label'),
		tooltiptext: buttonStrings.get('full-screen.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.fullScreenMode(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-search-minus',
		label: buttonStrings.get('tb-search-minus.label'),
		tooltiptext: buttonStrings.get('tb-search-minus.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.searchBarSize(event, -1);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-page-reload',
		type: 'custom',
		label: buttonStrings.get('tb-page-reload.label'),
		tooltiptext: buttonStrings.get('tb-page-reload.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-page-reload';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-page-reload.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-page-reload.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:ReloadOrDuplicate");
			toolbarbutton_0.addEventListener('click', function(event) {
				var aThis = event.target;
			var window = event.target.ownerDocument.defaultView;
			window.checkForMiddleClick(aThis, event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.setAttribute("key", "key_reload");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'use-document-fonts',
		label: buttonStrings.get('use-document-fonts.label'),
		tooltiptext: buttonStrings.get('use-document-fonts.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.toggleDocumentFonts(aThis);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "browser.display.use_document_fonts", "use-document-fonts");
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-check-for-update',
		label: buttonStrings.get('tb-check-for-update.label'),
		tooltiptext: buttonStrings.get('tb-check-for-update.tooltip'),
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.checkForUpdates();
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-about-blank',
		label: buttonStrings.get('tb-about-blank.label'),
		tooltiptext: buttonStrings.get('tb-about-blank.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openPageTab('about:blank', event);
		},
		onCommand: function(event) {
			var window = event.target.ownerDocument.defaultView;
			window.loadURI('about:blank');
		}
	});

	CustomizableUI.createWidget({
		id: 'firefox-theme',
		label: buttonStrings.get('firefox-theme.label'),
		tooltiptext: buttonStrings.get('firefox-theme.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openLinkFromPrefTab('url.firefox-theme',event);
		},
		onCommand: function(event) {
			toolbar_buttons.openLinkFromPref('url.firefox-theme',event);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-page-stop',
		type: 'custom',
		label: buttonStrings.get('tb-page-stop.label'),
		tooltiptext: buttonStrings.get('tb-page-stop.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-page-stop';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-page-stop.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-page-stop.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:Stop");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'link-open',
		label: buttonStrings.get('link-open.label'),
		tooltiptext: buttonStrings.get('link-open.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.setHowLinksOpen();
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadPrefWatcher(document, "browser.link.open_newwindow", "link-open");
		}
	});

	CustomizableUI.createWidget({
		id: 'label-blank',
		label: buttonStrings.get('label-blank.label'),
		tooltiptext: buttonStrings.get('label-blank.tooltip'),
		onCommand: function(event) {
			toolbar_buttons.renameTabBlank(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'send-link',
		type: 'custom',
		label: buttonStrings.get('send-link.label'),
		tooltiptext: buttonStrings.get('send-link.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'send-link';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('send-link.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('send-link.tooltip'));
			toolbarbutton_0.setAttribute("command", "Browser:SendLink");
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-cookie-manager',
		label: buttonStrings.get('tb-cookie-manager.label'),
		tooltiptext: buttonStrings.get('tb-cookie-manager.tooltip'),
		onClick: function(event) {
			toolbar_buttons.openCookieTab(event);
		},
		onCommand: function(event) {
			toolbar_buttons.viewCookies(event);
		}
	});

	CustomizableUI.createWidget({
		id: 'use-document-colors',
		label: buttonStrings.get('use-document-colors.label'),
		tooltiptext: buttonStrings.get('use-document-colors.tooltip'),
		onCommand: function(event) {
			var aThis = event.target;
			toolbar_buttons.toggleDocumentColors(aThis);
		},
		onCreated: function(aNode) {
			var document = aNode.ownerDocument;
			toolbar_buttons.loadDocumentColors(document);
		}
	});

	CustomizableUI.createWidget({
		id: 'tb-url-go-button',
		type: 'custom',
		label: buttonStrings.get('tb-url-go-button.label'),
		tooltiptext: buttonStrings.get('tb-url-go-button.tooltip'),
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'tb-url-go-button';
			toolbarbutton_0.setAttribute('label', buttonStrings.get('tb-url-go-button.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('tb-url-go-button.tooltip'));
			toolbarbutton_0.addEventListener('command', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.gURLBar.handleCommand(event);
			}, false);
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			toolbarbutton_0.addEventListener('dragover', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.gURLBar.onDragOver(event);
			}, false);
			toolbarbutton_0.addEventListener('dragdrop', function(event) {
				var window = event.target.ownerDocument.defaultView;
			window.gURLBar.onDrop(event);
			}, false);
			return toolbarbutton_0;
		}
	});

	CustomizableUI.createWidget({
		id: 'dictionary-list',
		type: 'custom',
		label: buttonStrings.get('dictionary-list.label'),
		tooltiptext: buttonStrings.get('dictionary-list.tooltip'),
		onCreated: function(aNode){
			var document = aNode.ownerDocument;
			// copied off the context menu
		},
		onBuild: function (document) {
			var window = document.defaultView;
			var toolbarbutton_0 = document.createElement('toolbarbutton');
			toolbarbutton_0.id = 'dictionary-list';
			toolbarbutton_0.setAttribute("type", "menu");
			toolbarbutton_0.setAttribute('label', buttonStrings.get('dictionary-list.label'));
			toolbarbutton_0.setAttribute('tooltiptext', buttonStrings.get('dictionary-list.tooltip'));
			toolbarbutton_0.classList.add("toolbarbutton-1");
			toolbarbutton_0.classList.add("chromeclass-toolbar-additional");
			var menupopup_1 = document.createElement('menupopup');
			menupopup_1.addEventListener('command', function(event) {
				event.stopPropagation();
			}, false);
			menupopup_1.addEventListener('popupshowing', function(event) {
				var aThis = event.target;
			toolbar_buttons.addDictionaryList(aThis);
			}, false);
			var menuseparator_2 = document.createElement('menuseparator');
			menupopup_1.appendChild(menuseparator_2);
			var menuitem_3 = document.createElement('menuitem');
			menuitem_3.setAttribute('label', buttonStrings.get('dictionary-list.add'));
			menuitem_3.addEventListener('command', function(event) {
				toolbar_buttons.addDictionaries(event);
			}, false);
			menupopup_1.appendChild(menuitem_3);
			toolbarbutton_0.appendChild(menupopup_1);
			return toolbarbutton_0;
		}
	});
}

function loadButtons(window) {
	var document = window.document;
	var toolbox = document.getElementById('navigator-toolbox');
	if(!toolbox) {
		return;
	}
	
	registerToolbars(window, document, []);
	
	
	// copied off the context menu
	toolbar_buttons.loadToggleToolbar(document, "toggle-bookmark-toolbar", "PersonalToolbar");
	toolbar_buttons.SearchResizeLoad(document);
	toolbar_buttons.loadToggleToolbar(document, "tb-toggle-menu-bar", "toolbar-menubar");
	toolbar_buttons.loadPrefWatcher(document, "network.proxy.type", "toggle-proxy");
	toolbar_buttons.loadAddonsBar(document, false);
	toolbar_buttons.loadContectBlocker(document, "extension.tbutton.iframe", "iframe",
		"stop-iframe", "chrome://toolbar-buttons/content/files/iframe.css");
	toolbar_buttons.loadPrefWatcher(document, "dom.disable_open_during_load", "tb-toggle-popup-blocker");
	toolbar_buttons.loadPrefWatcher(document, "security.enable_java", "java-toggle");
	toolbar_buttons.loadContectBlocker(document, "extension.tbutton.marquee", "marquee",
		"stop-animation", "chrome://toolbar-buttons/content/files/marquee.css",
		toolbar_buttons.setAnimationState);
	toolbar_buttons.loadToggleToolbar(document, "statusbar-toggle", "status-bar");
toolbar_buttons.loadToggleToolbar(document, "statusbar-toggle", "addon-bar");
	toolbar_buttons.loadPrefWatcher(document, "browser.link.open_newwindow", "link-open");
	toolbar_buttons.loadDocumentColors(document);
	toolbar_buttons.loadContectBlocker(document, "extension.tbutton.flash", "flash",
		"stop-flash", "chrome://toolbar-buttons/content/files/flash.css");
	toolbar_buttons.loadToggleToolbar(document, "toggle-toolbar", "nav-bar");
	toolbar_buttons.loadPrefWatcher(document, "font.minimum-size", "min-font-size");
	toolbar_buttons.loadPrefWatcher(document, "javascript.enabled", "javascript-toggle")
	toolbar_buttons.loadContectBlocker(document, "extension.tbutton.movies", "movies",
		"stop-movies", "chrome://toolbar-buttons/content/files/movies.css");
	toolbar_buttons.loadContectBlocker(document, "extension.tbutton.enable_all", "enable_all",
		"stop-dynamic-content", "chrome://toolbar-buttons/content/files/dcontent.css");
	toolbar_buttons.loadPrefWatcher(document, "network.proxy.type", null, toolbar_buttons.setProxyButtonState);
toolbar_buttons.loadPrefWatcher(document, "network.proxy.autoconfig_url", null, toolbar_buttons.setProxyButtonState);
	toolbar_buttons.loadPrefWatcher(document, "browser.display.use_document_fonts", "use-document-fonts");
	toolbar_buttons.allMenusStartUp(document);
	toolbar_buttons.loadPrefWatcher(document, "permissions.default.image", "image-toggle");
	toolbar_buttons.loadPrefWatcher(document, "network.cookie.cookieBehavior", "stop-cookies");
}

function createToolbar(doc, toolbox, attributes, name) {
	var special = ["id", "class", "defaultset", "currentset"];
	var toolbar = doc.createElement('toolbar');
	for(var attr in attributes) {
		if(special.indexOf(attr) == -1) {
			toolbar.setAttribute(attr, attributes[attr]);
		}
	}
	toolbar.setAttribute('toolbarname', name);
	if(attributes.id) {
		toolbar.id = attributes.id;
	}
	if(attributes.class) {
		toolbar.className = attributes.class;
	}
	doc.getElementById(toolbox).appendChild(toolbar);
	// put after appending to stop Thunderbird/SeaMonkey loading the buttons
	// which messes with our CustomizableUI
	if(attributes.defaultset) {
		toolbar.setAttribute('defaultset', attributes['defaultset']);
	}
	if(attributes.currentset) {
		toolbar.setAttribute('currentset', attributes['currentset']);
	}
}

var gButtonIds = ["help", "about-disk-cache", "workoffline", "themes", "tb-print-page", "find-prev", "hide-images", "new-message", "find", "about-plugins", "toolbar-menu", "close-other-tabs", "installaddons", "java-toggle", "select-all", "tb-twitter-button", "reset", "about-config", "tb-search-resize", "close-all-tabs", "close-tab", "tb-page-info-media", "websearch", "stop-movies", "firefox-extension", "read-news", "clear-data", "javaScriptConsole", "tb-search-plus", "tb-view-menu", "clear-url", "google", "read-mail", "reduce", "tb-clone-tab", "toggle-proxy", "bookmarks-menu-button1", "bookmarks-menu-button2", "gmail", "tb-toggle-popup-blocker", "preferences", "label-all-blank", "print-preview", "wikipedia", "reload-all-tabs", "exit", "import", "tb-clear-url", "favorite-page", "thunderbird-theme", "bottom-page", "tb-all-menus", "undo", "min-font-size", "image-toggle", "reload-skip-cache", "tb-show-all-history", "tb-clear-cache", "show-frame", "tb-saved-passwords", "stop-dynamic-content", "extensions", "statusbar-toggle", "addons", "bookmark-nopop", "tb-open", "javascript-toggle", "stop-iframe", "redo", "next-tab", "saveas", "delete-button", "tb-clear-search", "snap-back", "stop-all", "tb-toggle-menu-bar", "bookmark", "customize-toolbar", "top-page", "find-again", "tab-list", "stop-flash", "inspecter", "toggle-styles", "translate", "pageinfo", "stop-cookies", "bookmark-tabs", "undo-close-tab", "tb-file-menu", "rename-tab", "paypal", "about-mem-cache", "page-source", "thunderbird-extension", "personal-bookmarks-menu-button", "restart-app", "previous-tab", "about-application", "tb-history-menu", "ebay", "tb-tools-menu", "tb-search-go-button", "yahoo-button", "change-text-direction", "save-frame", "pagesetup", "hotmail-button", "tb-new-tab", "about-cache", "minimize-window", "tb-edit-menu", "tb-about-about", "bookmark-manager", "up-directory", "clipboard-button", "toggle-bookmark-toolbar", "stop-animation", "enlarge", "reload-proxy", "open-current-frame", "toggle-toolbar", "profile-folder", "full-screen", "tb-search-minus", "tb-page-reload", "use-document-fonts", "tb-check-for-update", "tb-about-blank", "firefox-theme", "tb-page-stop", "link-open", "label-blank", "send-link", "tb-cookie-manager", "use-document-colors", "tb-url-go-button", "dictionary-list"];

function unloadButtons(window) {
	var document = window.document;
	var toolbarIds = [];
	var uiIds = ["tb-about-about-view"];

	for(var t = 0; t < toolbarIds.length; t++) {
		var toolbar = document.getElementById(toolbarIds[t]);
		if(toolbar) {
			CustomizableUI.unregisterArea(toolbarIds[t], false);
			toolbar.parentNode.removeChild(toolbar);
		}
	}
	for(var i = 0; i < gButtonIds.length; i++) {
		var buttonId = gButtonIds[i];
		var key = document.getElementById(buttonId + '-key');
		if(key) {
			key.parentNode.removeChild(key);
		}
		var menuitem = document.getElementById(buttonId + '-menu-item');
		if(menuitem) {
			menuitem.parentNode.removeChild(menuitem);
		}
	}
	var menu = document.getElementById('toolbar-buttons-menu');
	if(menu && !menu.firstChild.firstChild) {
		menu.parentNode.removeChild(menu);
	}
	for(var i = 0; i < uiIds.length; i++) {
		var node = document.getElementById(uiIds[i]);
		while(node) {
			node.parentNode.removeChild(node);
			node = document.getElementById(uiIds[i]);
		}
	}
	for(var i = 0; i < gShutDownFunctions.length; i++) {
		try {
			gShutDownFunctions[i]();
		} catch(e) {}
	}
}

function shutdownButtons() {
	log(gButtonIds);
	for(var i = 0; i < gButtonIds.length; i++) {
		CustomizableUI.destroyWidget(gButtonIds[i]);
	}
}

function registerToolbars(window, document, toolbar_ids) {
	for(var i in toolbar_ids) {
		observeToolbar(window, document, toolbar_ids[i]);
		CustomizableUI.registerArea(toolbar_ids[i], {
			type: CustomizableUI.TYPE_TOOLBAR,
			defaultPlacements: [],
			defaultCollapsed: false
		}, true);
	}
}

function observeToolbar(window, document, toolbar_id) {
	var prefs = Cc['@mozilla.org/preferences-service;1'].getService(Ci.nsIPrefService)
			.getBranch("extension.tbutton." + 'toolbar_status.' + toolbar_id + '.');
	var toolbar = document.getElementById(toolbar_id);
	var observer = function(mutations) {
		mutations.forEach(function(mutation) {
			if(mutation.attributeName && (CustomizableUI.shim || mutation.attributeName != 'currentset')) {
				prefs.setCharPref(mutation.attributeName, toolbar.getAttribute(mutation.attributeName));
			}
		});
	}
	var mutationObserver = new window.MutationObserver(observer);
	var attrList = prefs.getChildList('', {});
	for(var i in attrList) {
		toolbar.setAttribute(attrList[i], prefs.getCharPref(attrList[i]));
	}
	mutationObserver.observe(toolbar, { attributes: true, subtree: false });
}

function log(e) {
	Cc["@mozilla.org/consoleservice;1"].getService(Ci.nsIConsoleService).logStringMessage(e);
}