[
  {
    "namespace": "sieve.session",
    "description": "Sieve Session Management",
    "functions": [
      {
        "name": "create",
        "type": "function",
        "description": "Creates a new session",
        "async":true,
        "parameters":[{
          "name": "id",
          "type": "string",
          "description" : "The sessions unique id"
        },{
          "name": "options",
          "type": "object",
          "description" : "Connection options as key value pairs",
          "additionalProperties" :true
        }]
      },
      {
        "name": "destroy",
        "type": "function",
        "description": "Destroys the given session",
        "async":true,
        "parameters":[{
          "name": "id",
          "type": "string",
          "description" : "The sessions unique id"
        }]
      },
      {
        "name": "connect",
        "type": "function",
        "description": "Connects to a remote server.",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the server host name"
        },{
          "name": "host",
          "type": "string",
          "description" : "the server host name"
        },{
          "name": "port",
          "type": "string",
          "description" : "the server port"
        }]
      },
      {
        "name": "has",
        "type": "function",
        "description": "Checks if the connection is known.",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the connection id"
        }]
      },
      {
        "name": "disconnect",
        "type": "function",
        "description": "Disconnects from the remote server.",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the connection id"
        },{
          "name": "force",
          "type": "boolean",
          "optional": true,
          "description" : "If true the disconnect will be forced."
        }]
      },
      {
        "name": "isConnected",
        "type": "function",
        "description": "Checks if the given id is connected",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        }]
      },

      {
        "name": "capabilities",
        "type": "function",
        "description": "Gets the server's capabilities",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        }]
      },
      {
        "name": "listScripts",
        "type": "function",
        "description": "Lists the server's scripts",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        }]
      },
      {
        "name": "putScript",
        "type": "function",
        "description": "Uploads a new or changed script",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "name",
          "type": "string",
          "description" : "The script name"
        },
        {
          "name": "body",
          "type": "string",
          "description" : "The scripts body"
        }]
      },
      {
        "name": "getScript",
        "type": "function",
        "description": "Gets a script from the server",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "name",
          "type": "string",
          "description" : "The script name"
        }]
      },
      {
        "name": "renameScript",
        "type": "function",
        "description": "Renames an existing script",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "oldName",
          "type": "string",
          "description" : "The old script name"
        },{
          "name": "newName",
          "type": "string",
          "description" : "The new script name"
        }]
      },
      {
        "name": "deleteScript",
        "type": "function",
        "description": "Deletes an existing script",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "name",
          "type": "string",
          "description" : "The script name"
        }]
      },
      {
        "name": "activateScript",
        "type": "function",
        "description": "Activates or deactivates a script",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "name",
          "type": "string",
          "optional": true,
          "description" : "The active script"
        }]
      },
      {
        "name": "checkScript",
        "type": "function",
        "description": "Check a script for syntax errors",
        "async": true,
        "parameters": [{
          "name": "id",
          "type": "string",
          "description" : "the unique connection id"
        },{
          "name": "body",
          "type": "string",
          "description" : "The scripts body"
        }]
      },
      {
        "name": "probe",
        "type": "function",
        "description": "Checks the connection to the server",
        "async": true,
        "parameters": [{
          "name": "host",
          "type": "string",
          "description" : "the server's hostname"
        },{
          "name": "port",
          "type": "string",
          "description" : "the server's port"
        }]
      },{
        "name": "addCertErrorOverride",
        "type": "function",
        "description": "Adds a certificate error override for the given cert.",
        "async": true,
        "parameters": [
          {
            "name" : "host",
            "type" : "string",
            "description" : "The hostname to override"
          },
          {
            "name" : "port",
            "type" : "string",
            "description" : "The port to override"
          },
          {
            "name": "rawDER",
            "type": "array",
            "description" : "The server's certificate",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "flags",
            "type": "integer",
            "description": "The override flags."
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onAuthenticate",
        "type": "function",
        "description" : "Called when authentication information is needed",
        "parameters": [
          {
            "name": "hasPassword",
            "description": "True in case a password is needed otherwise false.",
            "type" : "boolean"
          }
        ],
        "returns": {
          "type": "object",
          "description" : "The authentication information.",
           "properties": {
             "username":      { "type": "string" },
             "password": { "type": "string" }
          }
        },
        "extraParameters": [
          {
            "name": "id",
            "description": "The unique account id.",
            "type": "string"
          }
        ]
      },
      {
        "name": "onAuthorize",
        "type": "function",
        "description" : "Called when authorization information is needed",
        "parameters": [
        ],
        "returns": {
          "type" : "string",
          "description" : "The authentication information."
        },
        "extraParameters": [
          {
            "name": "id",
            "description": "The unique account id.",
            "type": "string"
          }
        ]
      },
      {
        "name": "onCertError",
        "type": "function",
        "description" : "Called when a tls handshake failed",
        "parameters": [
          {
            "name": "securityInfo",
            "type": "object",
            "description": "The authentication information.",
            "properties": {
              "host": {
                "type" : "string",
                "description" : "The hostname for which the validation failed"
              },
              "port": {
                "type" : "string",
                "description" : "The port for which te validation failed"
              },
              "rawDER": {
                "type": "array",
                "description" : "The server's certificate",
                "items": {
                  "type": "integer"
                }
              },
              "isDomainMismatch": {
                "description" : "The domain does not match",
                "type": "boolean"
              },
              "isExtendedValidation": {
                "description" : "The extended validation failed",
                "type": "boolean"
              },
              "isNotValidAtThisTime": {
                "description" : "The certificate's validity expired",
                "type": "boolean"
              },
              "isUntrusted": {
                "description" : "The certificate's is untrusted or self signed",
                "type": "boolean"
              }
            }
          }
        ],
        "returns": {

        },
        "extraParameters": [
          {
            "name": "id",
            "description": "The unique account id.",
            "type": "string"
          }
        ]
      },
      {
        "name": "onProxyLookup",
        "type": "function",
        "description" : "Called when a proxy lookup is needed",
        "parameters": [
          {
            "name": "host",
            "description": "the servers hostname",
            "type" : "string"
          },
          {
            "name": "port",
            "description": "the server port",
            "type" : "string"
          }
        ],
        "returns": {
          "type" : "string",
          "description" : "The proxy information."
        },
        "extraParameters": [
          {
            "name": "id",
            "description": "The unique account id.",
            "type": "string"
          }
        ]
      }
    ]
  }
]